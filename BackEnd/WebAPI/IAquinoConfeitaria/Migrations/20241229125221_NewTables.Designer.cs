// <auto-generated />
using System;
using IAquinoConfeitaria.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IAquinoConfeitaria.Migrations
{
    [DbContext(typeof(WebApiContext))]
    [Migration("20241229125221_NewTables")]
    partial class NewTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("IAquinoConfeitaria.Models.AddressModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("IAquinoConfeitaria.Models.BuyModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Buys");
                });

            modelBuilder.Entity("IAquinoConfeitaria.Models.ClientModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("TEXT");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Fidelity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("IAquinoConfeitaria.Models.CouponModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PriceOff")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ValidityData")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("IAquinoConfeitaria.Models.IngredientModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ProductModelId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("QttInStock")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("QttUsedPerProduct")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductModelId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("IAquinoConfeitaria.Models.ItenBuyModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BuyModelId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BuyModelId");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("IAquinoConfeitaria.Models.OrderModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CouponId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Paid")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("PriceOff")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ValueReceived")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CouponId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("IAquinoConfeitaria.Models.ProductModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OrderModelId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderModelId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("IAquinoConfeitaria.Models.CouponModel", b =>
                {
                    b.HasOne("IAquinoConfeitaria.Models.ClientModel", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("IAquinoConfeitaria.Models.IngredientModel", b =>
                {
                    b.HasOne("IAquinoConfeitaria.Models.ProductModel", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("ProductModelId");
                });

            modelBuilder.Entity("IAquinoConfeitaria.Models.ItenBuyModel", b =>
                {
                    b.HasOne("IAquinoConfeitaria.Models.BuyModel", null)
                        .WithMany("Itens")
                        .HasForeignKey("BuyModelId");
                });

            modelBuilder.Entity("IAquinoConfeitaria.Models.OrderModel", b =>
                {
                    b.HasOne("IAquinoConfeitaria.Models.AddressModel", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("IAquinoConfeitaria.Models.ClientModel", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IAquinoConfeitaria.Models.CouponModel", "Coupon")
                        .WithMany()
                        .HasForeignKey("CouponId");

                    b.Navigation("Address");

                    b.Navigation("Client");

                    b.Navigation("Coupon");
                });

            modelBuilder.Entity("IAquinoConfeitaria.Models.ProductModel", b =>
                {
                    b.HasOne("IAquinoConfeitaria.Models.OrderModel", null)
                        .WithMany("Products")
                        .HasForeignKey("OrderModelId");
                });

            modelBuilder.Entity("IAquinoConfeitaria.Models.BuyModel", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("IAquinoConfeitaria.Models.OrderModel", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("IAquinoConfeitaria.Models.ProductModel", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
